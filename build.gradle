
buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '6.0'
group = 'com.modderg.tameablebeasts'
archivesBaseName = 'tameablebeasts'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'official', version: '1.20'

    runs {
        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')

            arg "-mixin.config="+archivesBaseName+".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'archivesBaseName'

            mods {
                tameablebeasts {
                    source sourceSets.main
                }
            }
        }

        server {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config="+archivesBaseName+".mixins.json"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'archivesBaseName'

            mods {
                tameablebeasts {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'


            args '--mod', 'archivesBaseName', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                tameablebeasts {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.4.0'

    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.7')

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:Xaeros-263420:4812568")

    implementation fg.deobf("dev.xylonity.tooltipoverhaul:tooltipoverhaul-forge-1.20.1:1.0.0")

    implementation 'com.eliotlash.mclib:mclib:20'
}

repositories {

    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = "Xylonity's vault"
        url = "https://raw.githubusercontent.com/Xylonity/maven-centralish/main/maven/"
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Tameable Beasts",
                "Specification-Vendor"    : "ModderG",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "tameablebeasts.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

apply plugin: 'org.spongepowered.mixin'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

mixin {
    add sourceSets.main, 'mixins.tameablebeasts.refmap.json'
    config 'tameablebeasts.mixins.json'

    debug.verbose = true
    debug.export = true
}


